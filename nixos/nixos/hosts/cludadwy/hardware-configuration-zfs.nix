# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "ahci" "ehci_pci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "rpool_5rhz23/nixos/ROOT/default";
    fsType = "zfs";
    options = [ "zfsutil" "X-mount.mkdir" ];
  };

  fileSystems."/boot" = {
    device = "bpool_5rhz23/nixos/BOOT/default";
    fsType = "zfs";
    options = [ "zfsutil" "X-mount.mkdir" ];
  };

  fileSystems."/home" = {
    device = "rpool_5rhz23/nixos/DATA/default/home";
    fsType = "zfs";
    options = [ "zfsutil" "X-mount.mkdir" ];
  };

  fileSystems."/root" = {
    device = "rpool_5rhz23/nixos/DATA/default/root";
    fsType = "zfs";
    options = [ "zfsutil" "X-mount.mkdir" ];
  };

  fileSystems."/srv" = {
    device = "rpool_5rhz23/nixos/DATA/default/srv";
    fsType = "zfs";
    options = [ "zfsutil" "X-mount.mkdir" ];
  };

  fileSystems."/usr/local" = {
    device = "rpool_5rhz23/nixos/DATA/default/usr/local";
    fsType = "zfs";
    options = [ "zfsutil" "X-mount.mkdir" ];
  };

  fileSystems."/var/log" = {
    device = "rpool_5rhz23/nixos/DATA/default/var/log";
    fsType = "zfs";
    options = [ "zfsutil" "X-mount.mkdir" ];
  };

  fileSystems."/var/spool" = {
    device = "rpool_5rhz23/nixos/DATA/default/var/spool";
    fsType = "zfs";
    options = [ "zfsutil" "X-mount.mkdir" ];
  };

  fileSystems."/nix" = {
    device = "rpool_5rhz23/nixos/DATA/local/nix";
    fsType = "zfs";
    options = [ "zfsutil" "X-mount.mkdir" ];
  };

  fileSystems."/state" = {
    device = "rpool_5rhz23/nixos/DATA/default/state";
    fsType = "zfs";
    options = [ "zfsutil" "X-mount.mkdir" ];
  };

  fileSystems."/etc/nixos" = {
    device = "/state/etc/nixos";
    fsType = "none";
    options = [ "bind" ];
  };

  fileSystems."/etc/cryptkey.d" = {
    device = "/state/etc/cryptkey.d";
    fsType = "none";
    options = [ "bind" ];
  };

  fileSystems."/boot/efis/nvme-Samsung_SSD_970_EVO_Plus_250GB_S4EUNX0R712008Z-part1" =
    {
      device = "/dev/disk/by-uuid/D350-DA49";
      fsType = "vfat";
      options =
        [ "x-systemd.idle-timeout=1min" "x-systemd.automount" "noauto" ];
    };

  fileSystems."/var/lib/docker" = {
    device = "rpool_5rhz23/nixos/DATA/default/var/lib/docker";
    fsType = "zfs";
    options = [ "zfsutil" "X-mount.mkdir" ];
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
